/*
* Copyright © 2016-2017 by IntegrIT S.A. dba Hackolade.  All rights reserved.
*
* The copyright to the computer software herein is the property of IntegrIT S.A.
* The software may be used and/or copied only with the written permission of 
* IntegrIT S.A. or in accordance with the terms and conditions stipulated in 
* the agreement/contract under which the software has been supplied. 


In order to define custom properties for any object's properties pane, you may copy/paste from the following,
making sure that you maintain a proper JSON format.

			{
				"propertyName": "Simple text",
				"propertyKeyword": "simpletextProp",
				"propertyType": "text"
			},
			{
				"propertyName": "Text area",
				"propertyKeyword": "textareaProp",
				"propertyTooltip": "Popup for multi-line text entry",
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Dropdown selection",
				"propertyKeyword": "dropdownProp",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": [
					"Option 1",
					"Option 2",
					"Option 3",
					"Option 4"
				]
			},
			{
				"propertyName": "Checkbox",
				"propertyKeyword": "checkboxProp",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Group",
				"propertyKeyword": "grpProp",
				"propertyType": "group",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
// “groupInput” can have the following states - 0 items, 1 item, and many items.
// “blockInput” has only 2 states - 0 items or 1 item. 
// This gives us an easy way to represent it as an object and not as an array internally which is beneficial for processing 
// and forward-engineering in particular.
			{
				"propertyName": "Block",
				"propertyType": "block",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
			{
				"propertyName": "Field List",
				"propertyKeyword": "keyList",
				"propertyType": "fieldList",
				"template": "orderedList"
			}, 
			{
				"propertyName": "List with attribute",
				"propertyKeyword": "keyListOrder",
				"propertyType": "fieldList",
				"template": "orderedList",
				"attributeList": [
					"ascending",
					"descending"
				]
			}

*/

[
	{
		"lowerTab": "Details",
		"structure": [
			{
				"propertyName": "Comments",
				"propertyKeyword": "description",
				"shouldValidate": false,
				"propertyTooltip": "comments",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "If not exist",
				"propertyKeyword": "ifNotExist",
				"defaultValue": true,
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Remarks",
				"propertyKeyword": "comments",
				"propertyTooltip": "remarks",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea"
			}
		],
		"containerLevelKeys": []
	},
	{
		"lowerTab": "Functions",
		"structure": [{
			"propertyName": "Functions",
			"propertyType": "group",
			"propertyKeyword": "UDFs",
			"propertyTooltip": "Creates a new scalar user-defined function (UDF) using either a SQL SELECT clause or a Python program.",
			"structure": [
				{
					"propertyName": "Name",
					"propertyKeyword": "funcName",
					"propertyTooltip": "The name of the function.",
					"propertyType": "text"
				},
				{
					"propertyName": "Comments",
					"propertyKeyword": "funcDescription",
					"propertyTooltip": "description",
					"propertyType": "details",
					"template": "textarea"
				},
				{
					"propertyName": "Or replace",
					"propertyKeyword": "funcOrReplace",
					"propertyType": "checkbox",
					"propertyTooltip": "Specifies that if a function with the same name and input argument data types, or signature, as this one already exists, the existing function is replaced. You can only replace a function with a new function that defines an identical set of data types."
				},
				{
					"propertyName": "Arguments",
					"propertyKeyword": "procArgs",
					"propertyType": "group",
					"propertyTooltip": "",
					"structure": [
						{
							"propertyName": "Arg mode",
							"propertyKeyword": "argmode",
							"propertyTooltip": "language",
							"propertyType": "The mode of an argument: IN, INOUT, or VARIADIC.",
							"propertyType": "select",
							"defaultValue": "IN",
							"options": [
								"IN",
								"INOUT",
								"VARIADIC"
							]
						},
						{
							"propertyName": "Argument name",
							"propertyKeyword": "argname",
							"propertyTooltip": "The name of the argument.",
							"propertyType": "text"
						},
						{
							"propertyName": "Arg type default",
							"propertyKeyword": "artypedefault",
							"propertyType": "checkbox",
							"defaultValue": true,
							"propertyTooltip": "Uncheck if you need to specify another type"
						},
						{
							"propertyName": "Arg type expression",
							"propertyKeyword": "default_expr",
							"propertyTooltip": "The argument types can be base, composite, or domain types, or can reference the type of a table column.",
							"propertyType": "text",
							"dependency": {
								"key": "artypedefault",
								"value": false
							}
						}
					]
				},
				{
					"propertyName": "Returns set of",
					"propertyKeyword": "setOf",
					"propertyType": "checkbox",
					"propertyTooltip": "Indicates that the function will return a set of items, rather than a single item."
				},
				{
					"propertyName": "Returns data type",
					"propertyKeyword": "returnType",
					"propertyTooltip": "Any valid PostgreSQL data type",
					"propertyType": "text",
					"dependency": {
						"key": "setOf",
						"value": false
					}
				},
				{
					"propertyName": "Language",
					"propertyKeyword": "lang_name",
					"propertyTooltip": "The name of the language that the procedure is implemented in.",
					"propertyType": "select",
					"defaultValue": "sql",
					"options": [
						"sql",
						"plpgsql",
						"c",
						"internal"
					]
				},
				{
					"propertyName": "Definition",
					"propertyKeyword": "definition",
					"propertyTooltip": "A string constant defining the function; the meaning depends on the language. It can be an internal function name, the path to an object file, an SQL command, or text in a procedural language.",
					"propertyType": "details",
					"template": "textarea",
					"markdown": false
				},
				{
					"propertyName": "Window",
					"propertyKeyword": "window",
					"propertyType": "checkbox",
					"propertyTooltip": "Indicates that the function is a window function rather than a plain function. This is currently only useful for functions written in C.",
					"dependency": {
						"key": "lang_name",
						"value": "c"
					}
				},
				{
					"propertyName": "Volatility",
					"propertyKeyword": "volatility",
					"propertyType": "select",
					"propertyTooltip": "These attributes inform the query optimizer about the behavior of the function.",
					"defaultValue": "VOLATILE",
					"options": [
						"IMMUTABLE",
						"STABLE",
						"VOLATILE"
					]
				},
				{
					"propertyName": "Leak proof",
					"propertyKeyword": "leakproof",
					"propertyType": "checkbox",
					"propertyTooltip": "Indicates that the function has no side effects. It reveals no information about its arguments other than by its return value."
				},
				{
					"propertyName": "When NULL args",
					"propertyKeyword": "volatility",
					"propertyType": "select",
					"propertyTooltip": "Indicates whether the function will be called normally when some of its arguments are null, or the function always returns null  ",
					"defaultValue": "CALLED ON NULL INPUT",
					"options": [
						"CALLED ON NULL INPUT",
						"RETURNS NULL ON NULL INPUT",
						"STRICT"
					]
				},
				{
					"propertyName": "SQL Security",
					"propertyKeyword": "functionSqlSecurity",
					"propertyTooltip": "Clause specifying what privileges are used when a procedure is called. If SQL SECURITY is INVOKER, the procedure body will be evaluated using the privileges of the user calling the procedure. If SQL SECURITY is DEFINER, the procedure body is always evaluated using the privileges of the definer account. DEFINER is the default.",
					"propertyType": "select",
					"defaultValue": "DEFINER",
					"options": [
						"",
						"DEFINER",
						"INVOKER"
					]
				},
				{
					"propertyName": "Parallel",
					"propertyKeyword": "parallel",
					"propertyTooltip": "Indicates whether the function can be executed in parallel mode and whether the presence of such a function in an SQL statement forces a serial execution plan.",
					"propertyType": "select",
					"defaultValue": "UNSAFE",
					"options": [
						"",
						"UNSAFE",
						"RESTICTED",
						"SAFE"
					]
				},
				{
					"propertyName": "Estimated cost",
					"propertyKeyword": "execution_cost",
					"propertyType": "numeric",
					"valueType": "number",
					"propertyTooltip": "A positive number giving the estimated execution cost for the function, in units of cpu_operator_cost."
				},
				{
					"propertyName": "Estimated rows",
					"propertyKeyword": "execution_cost",
					"propertyType": "numeric",
					"valueType": "number",
					"minValue": 0,
					"defaultValue": 1000,
					"step": 1,
					"propertyTooltip": "A positive number giving the estimated number of rows that the planner should expect the function to return.",
					"dependency": {
						"key": "setOf",
						"value": true
					}
				},
				{
					"propertyName": "Support function",
					"propertyKeyword": "support_function",
					"propertyTooltip": "The name of a planner support function to use for this function.",
					"propertyType": "details",
					"template": "textarea",
					"markdown": false
				},
				{
					"propertyName": "Config parameters",
					"propertyKeyword": "configuration_parameter",
					"propertyTooltip": "The SET clause causes the specified configuration parameter to be set to the specified value when the function is entered, and then restored to its prior value when the function exits.",
					"propertyType": "details",
					"template": "textarea",
					"markdown": false
				},
				{
					"propertyName": "Remarks",
					"propertyKeyword": "functionComments",
					"propertyTooltip": "comments",
					"addTimestampButton": false,
					"propertyType": "details",
					"template": "textarea"
				}
			]
		}]
	},
	{
		"lowerTab": "Procedures",
		"structure": [{
			"propertyName": "Procedures",
			"propertyType": "group",
			"propertyKeyword": "Procedures",
			"propertyTooltip": "Creates a new stored procedure or replaces an existing procedure for the current database.",
			"structure": [
				{
					"propertyName": "Name",
					"propertyKeyword": "name",
					"propertyTooltip": "The name of the procedure.",
					"propertyType": "text"
				},
				{
					"propertyName": "Comments",
					"propertyKeyword": "functionDescription",
					"propertyTooltip": "description",
					"propertyType": "details",
					"template": "textarea"
				},
				{
					"propertyName": "Or replace",
					"propertyKeyword": "orReplace",
					"propertyType": "checkbox",
					"propertyTooltip": "Specifies that if a procedure with the same name and input argument data types, or signature, as this one already exists, the existing function is replaced. You can only replace a function with a new function that defines an identical set of data types."
				},
				{
					"propertyName": "Language",
					"propertyKeyword": "lang_name",
					"propertyTooltip": "The name of the language that the procedure is implemented in.",
					"propertyType": "select",
					"defaultValue": "sql",
					"options": [
						"sql",
						"plpgsql",
						"c",
						"internal"
					]
				},
				{
					"propertyName": "Arguments",
					"propertyKeyword": "procArgs",
					"propertyType": "group",
					"propertyTooltip": "",
					"structure": [
						{
							"propertyName": "Arg mode",
							"propertyKeyword": "argmode",
							"propertyTooltip": "language",
							"propertyType": "The mode of an argument: IN, INOUT, or VARIADIC.",
							"propertyType": "select",
							"defaultValue": "IN",
							"options": [
								"IN",
								"INOUT",
								"VARIADIC"
							]
						},
						{
							"propertyName": "Argument name",
							"propertyKeyword": "argname",
							"propertyTooltip": "The name of the argument.",
							"propertyType": "text"
						},
						{
							"propertyName": "Arg type default",
							"propertyKeyword": "artypedefault",
							"propertyType": "checkbox",
							"defaultValue": true,
							"propertyTooltip": "Uncheck if you need to specify another type"
						},
						{
							"propertyName": "Arg type expression",
							"propertyKeyword": "default_expr",
							"propertyTooltip": "The argument types can be base, composite, or domain types, or can reference the type of a table column.",
							"propertyType": "text",
							"dependency": {
								"key": "artypedefault",
								"value": false
							}
						}
					]
				},
				{
					"propertyName": "Procedure body",
					"propertyKeyword": "procBody",
					"propertyTooltip": "Valid procedure statement.",
					"propertyType": "details",
					"template": "textarea",
					"markdown": false
				},
				{
					"propertyName": "Parameters",
					"propertyKeyword": "inputArgs",
					"propertyTooltip": "A list of parameter names, modes, and data types. ",
					"propertyType": "details",
					"template": "textarea",
					"markdown": false
				},
				{
					"propertyName": "Remarks",
					"propertyKeyword": "functionComments",
					"propertyTooltip": "comments",
					"addTimestampButton": false,
					"propertyType": "details",
					"template": "textarea"
				}
			]
		}]
	}
]
